# Generated by Django 5.2.5 on 2025-08-18 09:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('forecast_date', models.DateField()),
                ('temperature_high', models.DecimalField(decimal_places=1, max_digits=4)),
                ('temperature_low', models.DecimalField(decimal_places=1, max_digits=4)),
                ('humidity', models.IntegerField()),
                ('wind_speed', models.DecimalField(decimal_places=1, max_digits=4)),
                ('precipitation_probability', models.IntegerField()),
                ('condition', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['forecast_date'],
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=500)),
                ('area_hectares', models.DecimalField(decimal_places=2, max_digits=10)),
                ('soil_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('area_hectares', models.DecimalField(decimal_places=2, max_digits=8)),
                ('field_type', models.CharField(choices=[('paddy', 'Paddy'), ('vegetables', 'Vegetables'), ('fruits', 'Fruits'), ('pulses', 'Pulses'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('active', 'Active'), ('fallow', 'Fallow'), ('maintenance', 'Maintenance')], max_length=20)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='main.farm')),
            ],
        ),
        migrations.CreateModel(
            name='FertilizerApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fertilizer_type', models.CharField(max_length=100)),
                ('amount_kg_per_hectare', models.DecimalField(decimal_places=2, max_digits=6)),
                ('application_date', models.DateField()),
                ('method', models.CharField(choices=[('broadcast', 'Broadcast'), ('band', 'Band'), ('foliar', 'Foliar'), ('drip', 'Drip Irrigation')], max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fertilizer_applications', to='main.field')),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('variety', models.CharField(max_length=100)),
                ('planting_date', models.DateField()),
                ('expected_harvest_date', models.DateField()),
                ('growth_stage', models.CharField(choices=[('germination', 'Germination'), ('vegetative', 'Vegetative'), ('flowering', 'Flowering'), ('maturity', 'Maturity'), ('harvest', 'Harvest')], max_length=50)),
                ('health_score', models.IntegerField(default=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='main.field')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('category', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense')], max_length=50)),
                ('subcategory', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_records', to='main.farm')),
            ],
        ),
        migrations.CreateModel(
            name='IrrigationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField()),
                ('duration_minutes', models.IntegerField()),
                ('water_amount_liters', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='irrigation_schedules', to='main.field')),
            ],
        ),
        migrations.CreateModel(
            name='PestDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('pest', 'Pest'), ('disease', 'Disease'), ('weed', 'Weed')], max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('severe', 'Severe')], max_length=20)),
                ('affected_area_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('detection_date', models.DateField()),
                ('treatment_applied', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('under_control', 'Under Control'), ('resolved', 'Resolved')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pest_diseases', to='main.crop')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('irrigation', 'Irrigation'), ('fertilizer', 'Fertilizer'), ('pest_control', 'Pest Control'), ('disease_management', 'Disease Management'), ('harvest_timing', 'Harvest Timing'), ('soil_health', 'Soil Health')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('priority', models.IntegerField(default=1)),
                ('estimated_impact', models.TextField()),
                ('suggested_actions', models.JSONField(default=list)),
                ('deadline', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('snoozed', 'Snoozed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='main.crop')),
            ],
            options={
                'ordering': ['priority', 'deadline'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('soil_moisture', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('soil_ph', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('light_intensity', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('rainfall', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='main.field')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='YieldRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harvest_date', models.DateField()),
                ('yield_kg_per_hectare', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quality_grade', models.CharField(choices=[('A', 'Grade A'), ('B', 'Grade B'), ('C', 'Grade C'), ('D', 'Grade D')], max_length=10)),
                ('market_price_per_kg', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yield_records', to='main.crop')),
            ],
        ),
    ]
