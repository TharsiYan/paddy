# Generated by Django 5.2.5 on 2025-08-22 06:15

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_weatherhistory'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='weatherhistory',
            options={'ordering': ['-timestamp'], 'verbose_name_plural': 'Weather History'},
        ),
        migrations.RenameField(
            model_name='weatherhistory',
            old_name='location_name',
            new_name='location',
        ),
        migrations.RemoveField(
            model_name='weatherhistory',
            name='recorded_at',
        ),
        migrations.RemoveField(
            model_name='weatherhistory',
            name='source',
        ),
        migrations.RemoveField(
            model_name='weatherhistory',
            name='uv_index',
        ),
        migrations.AddField(
            model_name='weatherhistory',
            name='timestamp',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='condition',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='humidity',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='rainfall',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='temperature',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='weatherhistory',
            name='wind_speed',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='PaddyRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(help_text='Farm location', max_length=200)),
                ('field_name', models.CharField(help_text='Field identifier', max_length=100)),
                ('soil_temperature', models.FloatField(help_text='Soil temperature in Celsius')),
                ('soil_type', models.CharField(choices=[('clay', 'Clay (Good water retention)'), ('sandy', 'Sandy (Well drained)'), ('loamy', 'Loamy (Ideal balance)'), ('silt', 'Silt (Fine texture)'), ('other', 'Other')], max_length=50)),
                ('planting_season', models.CharField(choices=[('yala', 'Yala (Feb-May)'), ('maha', 'Maha (Sep-Mar)'), ('current', 'Current Season'), ('other', 'Other')], max_length=50)),
                ('primary_varieties', models.JSONField(help_text='Primary paddy varieties recommended')),
                ('secondary_varieties', models.JSONField(help_text='Secondary paddy varieties')),
                ('planting_timing', models.TextField(help_text='Planting timing recommendations')),
                ('soil_preparation', models.TextField(help_text='Soil preparation advice')),
                ('water_management', models.TextField(help_text='Water management tips')),
                ('fertilizer_tips', models.TextField(help_text='Fertilizer recommendations')),
                ('risk_factors', models.JSONField(help_text='Risk factors identified')),
                ('optimal_conditions', models.JSONField(help_text='Optimal growing conditions')),
                ('current_time_recommendations', models.TextField(help_text='Current time-based advice')),
                ('seasonal_varieties', models.JSONField(help_text='Season-specific varieties')),
                ('immediate_actions', models.JSONField(help_text='Immediate actions required')),
                ('explanation', models.TextField(help_text='Overall explanation and summary')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='When recommendation was generated')),
                ('success', models.BooleanField(default=True, help_text='Whether recommendation was successful')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or feedback')),
            ],
            options={
                'verbose_name_plural': 'Paddy Recommendations',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['location', 'timestamp'], name='main_paddyr_locatio_667f86_idx'), models.Index(fields=['soil_temperature', 'timestamp'], name='main_paddyr_soil_te_455957_idx'), models.Index(fields=['soil_type', 'timestamp'], name='main_paddyr_soil_ty_7f5131_idx'), models.Index(fields=['planting_season', 'timestamp'], name='main_paddyr_plantin_a10807_idx')],
            },
        ),
    ]
